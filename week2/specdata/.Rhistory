library(devtools)
install.packages(devtools)
install.packages('devtools')
install.packages('githubintall')
install.packages('githubinstall')
install.packages('githubinstall')
library(devtools)
library('devtools')
install.packages('shiny')
library('shiny')
library(shiny)
run_examples("01_hello")
runExample("01_hello")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
1+1
rnorm()
1+2
?rnorm
install.packages(c("KernSmooth", "R", "package"))
install.packages("KernSmooth")
library("KernSmooth")
x <- matrix(1:6,2,3)
x[1,2]
View(x)
x <- c(1,3, 5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y<- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x==10]<-4
x
read.csv(hw1_data)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
head(1,2)
head(hw1_data)
head(hw1_data,1:2)
head(hw1_data,1,2)
head(hw1_data,n=1:2)
head(hw1_data,2)
nrows(hw1_data)
nrow(hw1_data)
head(hw1_data,153)
tail(hw1_data)
tail(hw1_data,2)
head(hw1_data,47)
hw1_data
x<- hw1_data(1,)
x<- hw1_data[1,]
x
y <- hw1_data[,1]
y
bad <- is.na(y)
bad
hw1_data[y]
hw1_data[bad]
hw1_data
bad
hw1_data[!bad]
hw1_data[bad,]
bad
sum(bad)
hw1_data[!bad,]
y
ym <- mean(y,na.rm = Ture)
mean(y)
mean(y,na.rm = T)
data$Ozone > 31 & data$Temp > 90
ddata$Ozone > 31
data$Ozone > 31
hw1_data$Ozone > 31 & hw1_data$Temp > 90
good <- hw1_data$Ozone > 31 & hw1_data$Temp > 90
good
hw1_data[good]
hw1_data[good,]
x <- hw1_data[good,2]
x
y <- mean(x,na.rm=T)
y
hw1_data
x <- hw1_data$Month = 6
x <- hw1_data$Month <- 6
x
x <- hw1_data$Month > 6
x
x <- hw1_data$Month == 6
x
temp <- hw1_data[good,4]
temp
tm <- mean(temp, na.rm = T)
tm
temp <- hw1
temp <- hw1_data[,4]
temp
tm <- mean(temp,na.rm = T)
tm
clear
clc
hw1_data
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
m6 <- hw1_data$Month==6
m6
mm6 <- hw1_data[m6]
mm6 <- hw1_data[m6,4]
mm6
mean(mm6)
m5 <- hw1_data$Month==5
m5 <- hw1_data[m5,1]
m5
x <- 1:4
y <- 2:3
+y
x+y
x <- c(1,3, 5)
y <- c(3,2,10)
rbind(x, y)
x <- 1:4
x
y <- 2:3
y
x+y
x <- c(4, "a", TRUE)
x
1
2
x <- as.Date("1999-09-09")
x
unclass(x)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
library(datasets)
data(iris)
?iris
s <- split(iris,iris$Sepal.Length)
lapply(s, function(x) colMeans(x[,c("virginica"]))
lapply(s, function(x) colMeans(x[,c("virginica")]))
lapply(s, function(x) colMeans(x[c("virginica"),]))
lapply(s, function(x) colMeans(x[c("virginica"),]))
lapply(s, colMeans(x[,c("virginica"]))
lapply(s, colMeans(x[,c("virginica")]))
library(datasets)
data("iris")
?iris
mean(iris[iris$Species=="virginica",]$Sepal.Length)
View(iris)
library(datasets)
data(mtcars)
?mtcars
View(data)
View(para)
View(sample)
View(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 -  82.63636
debug(ls)
ls
lapply(mtcars, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
clear
pollutantmean <- function(directory, pollutant, id = 1:332) {
source('~/Downloads/specdata/Untitled.R')
}
}
}
setwd("~/Downloads/specdata")
#getwd()
source('~/Downloads/Untitled.R')
pollutantmean()
getwd()
list.files()
list.dirs()
list.files()
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean()
directory
directory()
~/Downloads/specdata
if(grep("specdata", "~/Downloads/specdata") == 1) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
setwd("~/Downloads/specdata")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
